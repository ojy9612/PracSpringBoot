# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "ojyojy" ]
  pull_request:
    branches: [ "ojyojy" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    ## create application.properties
    - name: make application.properties
      if: true # branch가 develop일 때
      run: |
        # spring의 resources 경로로 이동
        cd ./src/main/resources
        touch ./application.properties
        # GitHub-Actions에서 설정한 값을 application-dev.properties 파일에 쓰기
        echo "${{ secrets.PROPERTIES_DEV }}" > ./application.properties
      shell: bash
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    #build
    - name: Build with Gradle
      run: ./gradlew clean build
    # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy
    # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/
    # 파일 압축
    - name: Make zip file
      run: zip -r ./hanghae99bucket.zip ./deploy
    # Deploy
    - name: Deploy
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 --acl private ./hanghae99bucket.zip s3://hanghae99bucket/

      # Deploy
    - name: Deploy
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
          aws deploy create-deployment \
          --application-name springboot-intro \
          --deployment-group-name dev \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=hanghae99bucket,bundleType=zip,key=hanghae99bucket.zip \
          --region ap-northeast-2
