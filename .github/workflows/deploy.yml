# This is a basic workflow to help you get started with Actions

name: deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "ojy" branch
  push:
    branches: [ "ojy" ]
  pull_request:
    branches: [ "ojy" ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          
          
    ## create application.properties
      - name: make application.properties
        if: true # branch가 develop일 때
        run: |
          # spring의 resources 경로로 이동
          cd ./src/main/resources
          
          # application.properties 파일 생성
          touch ./application.properties 

          # GitHub-Actions에서 설정한 값을 application-dev.properties 파일에 쓰기
          echo "${{ secrets.PROPERTIES_DEV }}" > ./application.properties 
          
          ls
          
        shell: bash
      
      
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash
              
	# 전송할 파일을 담을 디렉토리 생성
      - name: Make Directory for deliver
        run: mkdir deploy

      # Jar 파일 Copy
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/

      # 압축파일 형태로 전달
      - name: Make zip file
        run: zip -r -qq -j ./hanghae99bucket.zip ./deploy

      # S3 Bucket으로 copy
      - name: Deliver to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
	run: |
	aws s3 cp --region ap-northeast-2 --acl private ./hanghae99bucket.zip s3://hanghae99bucket/

